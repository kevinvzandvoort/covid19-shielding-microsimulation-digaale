use.names=T, fill=T) %>%
rbind(swab[participant_id == 3033103, c("participant_id", "date", "household_id", "swab_id", "secretions",
"contamination", "adverse_event", "comment")] %>%
.[, swab_age := contact_data[participant_id == 3033103, participant_age_years]] %>%
.[, swab_id := '01-19-317'],
use.names=T, fill=T)
#There are some duplicates in the participants list
#participants[swab_id %in% data[, swab_ID] & swab_id %in% participants[, .N, by="swab_id"][N>1, swab_id]]
participants = participants[!(participant_id == 3033104 & is.na(swab_age))]
#' These cannot be merged - ask Casey for participant_id on labels
data[!id %in% participants[, swab_id]]
data = data %>%
merge(participants, by.x="id", by.y="swab_id",
all.x=T, all.y=F)
found_ids = data[is.na(swab_age), c("participant_id")] %>%
merge(contact_data[, c("participant_id", "participant_age_years")],
by.x="participant_id", by.y="participant_id")
for(i in 1:nrow(found_ids)){
data[participant_id == found_ids[i, participant_id], swab_age := found_ids[i, participant_age_years]]
}
data[id == '01-19-302', c("participant_id") := .(6021001)]
data[participant_id == 6021001, swab_age := contact_data[participant_id == 6021001, participant_age_years]]
age_groups_sample <- data.table(
age_from = c(0, 2, 6, 15, 30, 50),
age_to = c(1, 5, 14, 29, 49, 100)
)[, name := paste0(age_from, "-", age_to)][age_to == 1, name := "<2"][age_to == 100, name := "50+"]
for(i in 1:nrow(age_groups_sample)){
data[swab_age >= age_groups_sample[i, age_from] & swab_age <= age_groups_sample[i, age_to], agegrp := factor(
age_groups_sample[i, name], levels=age_groups_sample[, name])]
}
results_total = binom::binom.confint(data[, pneu_carr_final] %>% sum(na.rm = TRUE), data[!is.na(pneu_carr_final), .N], methods = "exact") %>%
as.data.table %>% .[, -"method"] %>%
.[, c("mean", "lower", "upper") := .(round(mean*100, 1), round(lower*100, 1), round(upper*100, 1))]
colnames(results_total) = c("carriers", "total", "mean", "lower", "upper")
results_by_age = data[, .(carriers = sum(pneu_carr_final, na.rm=TRUE), total = sum(!is.na(pneu_carr_final))), by="agegrp"] %>%
.[, c("mean", "lower", "upper") := binom::binom.confint(carriers, total, methods = "exact") %>%
{.[, c("mean", "lower", "upper")] * 100} %>%
round(1), by="agegrp"] %>% setorder(agegrp)
data[pneu_carr_final == 1 & (sero1_final %in% c("NT", "-") | grepl("NT", sero1_final, TRUE)), c("dom_pcv10_type", "dom_pcv13_type", "dom_pneumosil_type") := "NT"]
data[pneu_carr_final == 1 & (sero1_final %in% c("NT", "-") | grepl("NT", sero1_final, TRUE)), c("dom_pcv10_type_sens", "dom_pcv13_type_sens", "dom_pneumosil_type_sens") := "NT"]
data[pneu_carr_final == 1 & sero1_final %in% serotypes_by_vaccine[pcv10 != 1, serotype], dom_pcv10_type := "NVT"]
data[pneu_carr_final == 1 & sero1_final %in% serotypes_by_vaccine[pcv10 == 1, serotype], dom_pcv10_type := "VT"]
data[pneu_carr_final == 1 & sero1_final %in% serotypes_by_vaccine[pcv13 != 1, serotype], dom_pcv13_type := "NVT"]
data[pneu_carr_final == 1 & sero1_final %in% serotypes_by_vaccine[pcv13 == 1, serotype], dom_pcv13_type := "VT"]
data[pneu_carr_final == 1 & sero1_final %in% serotypes_by_vaccine[pneumosil != 1, serotype], dom_pneumosil_type := "NVT"]
data[pneu_carr_final == 1 & sero1_final %in% serotypes_by_vaccine[pneumosil == 1, serotype], dom_pneumosil_type := "VT"]
data[pneu_carr_final == 1 & sero1_final %in% serotypes_by_vaccine[pcv10 == 0, serotype], dom_pcv10_type_sens := "NVT"]
data[pneu_carr_final == 1 & sero1_final %in% serotypes_by_vaccine[pcv10 > 0, serotype], dom_pcv10_type_sens := "VT"]
data[pneu_carr_final == 1 & sero1_final %in% serotypes_by_vaccine[pcv13 == 0, serotype], dom_pcv13_type_sens := "NVT"]
data[pneu_carr_final == 1 & sero1_final %in% serotypes_by_vaccine[pcv13 > 0, serotype], dom_pcv13_type_sens := "VT"]
data[pneu_carr_final == 1 & sero1_final %in% serotypes_by_vaccine[pneumosil == 0, serotype], dom_pneumosil_type_sens := "NVT"]
data[pneu_carr_final == 1 & sero1_final %in% serotypes_by_vaccine[pneumosil > 0, serotype], dom_pneumosil_type_sens := "VT"]
carriage_data = data
for(i in 1:nrow(carriage_data)){
st = "S"
serotypes = sprintf("sero%s_final", 1:5)
for(s in serotypes){
val = carriage_data[i, get(s)]
if(!is.na(val)){
if(val %in% serotypes_by_vaccine[pneumosil>0, serotype]) val_st = "VT"
else val_st = "NVT"
if(st == "S") st = val_st
else if(st != val_st) st = "B"
}
}
carriage_data[i, model_st := st]
}
carriage_data[, .(carriers = sum(pneu_carr_final),
VT = sum(dom_pneumosil_type == "VT", na.rm=T),
NVT = sum(dom_pneumosil_type == "NVT", na.rm=T),
NT = sum(dom_pneumosil_type == "NT", na.rm=T),
total = sum(!is.na(pneu_carr_final))), by="agegrp"] %>%
.[!is.na(agegrp)] %>%
melt(measure.vars = c("VT", "NVT", "NT")) %>%
.[, value := ifelse(value==0 & variable == "NT", 0.05, value)] %>%
ggplot(aes(x=agegrp, y=value/total, fill=variable))+
geom_col(width=0.5)+
scale_fill_manual(values = c("VT" = "#00BF6F", "NVT" = "#0D5257", "NT" = "#DDDDDD"))+
scale_y_continuous(labels = scales::percent)+theme_bw()+
coord_cartesian(ylim=c(0,1))+
geom_errorbar(data = carriage_data[, .(carriers = sum(pneu_carr_final, na.rm=TRUE), total = sum(!is.na(pneu_carr_final))), by="agegrp"] %>%
.[, c("mean", "lower", "upper") := binom::binom.confint(carriers, total, methods = "exact") %>%
.[, c("mean", "lower", "upper")], by="agegrp"] %>% .[!is.na(agegrp)], aes(ymin=lower, ymax=upper, fill=NULL, y=NULL), width = 0.1, size=1, colour="#777777")+
labs(x="Age group", y="Prevalence", fill = "Serotype")+
theme(legend.position = "right",axis.text = element_text(size = 14),
legend.text = element_text(size=14),
axis.title = element_text(size = 18),
text = element_text(size = 14),
strip.text = element_text(size = 18),
title = element_text(size = 18),
plot.title = element_text(face = "bold", size=18),
legend.title = element_text(face = "bold"))
plot_stratified_carriage = carriage_data[, .(carriers = sum(pneu_carr_final),
VT = sum(dom_pneumosil_type == "VT", na.rm=T),
NVT = sum(dom_pneumosil_type == "NVT", na.rm=T),
NT = sum(dom_pneumosil_type == "NT", na.rm=T),
total = sum(!is.na(pneu_carr_final))), by="agegrp"] %>%
.[!is.na(agegrp)] %>%
melt(measure.vars = c("VT", "NVT", "NT")) %>%
.[, value := ifelse(value==0 & variable == "NT", 0.05, value)] %>%
ggplot(aes(x=agegrp, y=value/total, fill=variable))+
geom_col(width=0.5)+
scale_fill_manual(values = c("VT" = "#00BF6F", "NVT" = "#0D5257", "NT" = "#DDDDDD"))+
scale_y_continuous(labels = scales::percent)+theme_bw()+
coord_cartesian(ylim=c(0,1))+
geom_errorbar(data = carriage_data[, .(carriers = sum(pneu_carr_final, na.rm=TRUE), total = sum(!is.na(pneu_carr_final))), by="agegrp"] %>%
.[, c("mean", "lower", "upper") := binom::binom.confint(carriers, total, methods = "exact") %>%
.[, c("mean", "lower", "upper")], by="agegrp"] %>% .[!is.na(agegrp)], aes(ymin=lower, ymax=upper, fill=NULL, y=NULL), width = 0.1, size=1, colour="#777777")+
labs(x="Age group", y="Prevalence", fill = "Serotype")+
theme(legend.position = "right",axis.text = element_text(size = 14),
legend.text = element_text(size=14),
axis.title = element_text(size = 18),
text = element_text(size = 14),
strip.text = element_text(size = 18),
title = element_text(size = 18),
plot.title = element_text(face = "bold", size=18),
legend.title = element_text(face = "bold"))
ggsave(plot = plot_stratified_carriage, filename = "~/workspace/espicc_poster_plot_stratified_carriage2.jpg", width = 34.8/2.54, height = 34.8/2.54 * (7/16), dpi=300)
carriage_data
carriage_data[, c("sero_1_final", "sero_2_final", "sero_3_final", "sero_4_final", "sero_5_final")]
carriage_data[, c("sero1_final", "sero2_final", "sero3_final", "sero4_final", "sero5_final")]
carriage_data[, c("sero1_final", "sero2_final", "sero3_final", "sero4_final", "sero5_final")] %>% unlist
carriage_data[, c("sero1_final", "sero2_final", "sero3_final", "sero4_final", "sero5_final")] %>% unlist %>% na.omit
carriage_data[, c("sero1_final", "sero2_final", "sero3_final", "sero4_final", "sero5_final")] %>% unlist %>% na.omit %>% table
carriage_data[, c("sero1_final", "sero2_final", "sero3_final", "sero4_final", "sero5_final")] %>% unlist %>% na.omit %>% table %>% sort
carriage_data[, c("sero1_final", "sero2_final", "sero3_final", "sero4_final", "sero5_final")] %>% unlist %>% na.omit %>% table %>% sort %>% sum
carriage_data[, c("sero1_final", "sero2_final", "sero3_final", "sero4_final", "sero5_final")] %>% unlist %>% na.omit %>% table %>% sort /251
carriage_data[, c("sero1_final", "sero2_final", "sero3_final", "sero4_final", "sero5_final")] %>% unlist %>% na.omit %>% table %>% sort /251 %>% rev()
carriage_data[, c("sero1_final", "sero2_final", "sero3_final", "sero4_final", "sero5_final")] %>% unlist %>% na.omit %>% table %>% sort
carriage_data[, c("sero1_final", "sero2_final", "sero3_final", "sero4_final", "sero5_final")] %>% unlist %>% na.omit %>% table %>% sort %>% rev()
carriage_data[, c("sero1_final", "sero2_final", "sero3_final", "sero4_final", "sero5_final")] %>% unlist %>% na.omit %>% table %>% sort %>% rev() %>% ./251
(carriage_data[, c("sero1_final", "sero2_final", "sero3_final", "sero4_final", "sero5_final")] %>% unlist %>% na.omit %>% table %>% sort %>% rev()) /251
(carriage_data[, c("sero1_final", "sero2_final", "sero3_final", "sero4_final", "sero5_final")] %>% unlist %>% na.omit %>% table %>% sort %>% rev()) /251 %>% cumsum
(carriage_data[, c("sero1_final", "sero2_final", "sero3_final", "sero4_final", "sero5_final")] %>% unlist %>% na.omit %>% table %>% sort %>% rev()) %>% cumsum
((carriage_data[, c("sero1_final", "sero2_final", "sero3_final", "sero4_final", "sero5_final")] %>% unlist %>% na.omit %>% table %>% sort %>% rev()) %>% cumsum)/251
library(data.table)
library(ggplot2)
library(magrittr)
library(readxl)
library(binom)
library(patchwork)
options(scipen=999)
data = readxl::read_excel("~/workspace/espicc_microbiology/data/ESPICC_n453_09-Jun-22_v2.0_withmissing.xls", na = c("", ".")) %>%
as.data.table
stata_data = haven::read_dta("~/workspace/espicc_microbiology/data/ESPICC_n453_09-Jun-22_v2.0.dta") %>% as.data.table()
serotypes_by_vaccine = data.table::fread("~/workspace/espicc_microbiology/data/serotypes_by_vaccine.csv")
espicc_analysis_dir = "~/workspace/espicc_contact_survey"
source("~/workspace/espicc_contact_survey/scripts/load_data.R")
participants = data.table::fread("~/workspace/espicc_somaliland/swab_export_list.csv")
participants[, date := as.Date(date)]
participants[participant_id == 2021009, swab_id := '01-19-299']
participants[swab_id == '01-19-307', participant_id := 1010302]
participants[swab_id == '01-19-306', participant_id := 1019205]
participants[swab_id == '01-19-292', participant_id := 6030101]
participants[swab_id == '01-19-327', participant_id := 3020901]
participants[swab_id == '01-19-295', household_id := 10116]
participants[swab_id == '01-19-316', household_id := 40206]
participants[swab_id == '01-19-288', participant_id := 3016306]
participants[swab_id == '01-19-288', participant_id := 3016306]
participants[household_id == 30331, c('participant_id', 'swab_id') := .(3033104, '01-19-318')]
participants[participant_id == 3033103, swab_id := '01-19-317']
participants[participant_id == 1016501, swab_id := '01-19-301']
participants[participant_id == 4027103, swab_id := '01-19-319']
participants = participants %>%
rbind(swab[household_id == 10116, c("participant_id", "date", "household_id", "swab_id", "secretions",
"contamination", "adverse_event", "comment")] %>%
.[, swab_age := contact_data[household_id == 10116, participant_age_years]] %>%
.[, swab_id := "01-19-295"],
use.names=T, fill=T) %>%
rbind(swab[participant_id == 4020602, c("participant_id", "date", "household_id", "swab_id", "secretions",
"contamination", "adverse_event", "comment")] %>%
.[, swab_age := contact_data[household_id == 40206, participant_age_years]] %>%
.[, swab_id := '01-19-316'],
use.names=T, fill=T) %>%
rbind(swab[participant_id == 3033103, c("participant_id", "date", "household_id", "swab_id", "secretions",
"contamination", "adverse_event", "comment")] %>%
.[, swab_age := contact_data[participant_id == 3033103, participant_age_years]] %>%
.[, swab_id := '01-19-317'],
use.names=T, fill=T)
#There are some duplicates in the participants list
#participants[swab_id %in% data[, swab_ID] & swab_id %in% participants[, .N, by="swab_id"][N>1, swab_id]]
participants = participants[!(participant_id == 3033104 & is.na(swab_age))]
#' These cannot be merged - ask Casey for participant_id on labels
data[!id %in% participants[, swab_id]]
data
#' These cannot be merged - ask Casey for participant_id on labels
data[!id %in% participants[, swab_id]]
data = data %>%
merge(participants, by.x="id", by.y="swab_id",
all.x=T, all.y=F)
data
#' These cannot be merged - ask Casey for participant_id on labels
data[!id %in% participants[, swab_id]]
data = readxl::read_excel("~/workspace/espicc_microbiology/data/ESPICC_n453_09-Jun-22_v2.0_withmissing.xls", na = c("", ".")) %>%
as.data.table
stata_data = haven::read_dta("~/workspace/espicc_microbiology/data/ESPICC_n453_09-Jun-22_v2.0.dta") %>% as.data.table()
serotypes_by_vaccine = data.table::fread("~/workspace/espicc_microbiology/data/serotypes_by_vaccine.csv")
espicc_analysis_dir = "~/workspace/espicc_contact_survey"
source("~/workspace/espicc_contact_survey/scripts/load_data.R")
participants = data.table::fread("~/workspace/espicc_somaliland/swab_export_list.csv")
participants[, date := as.Date(date)]
participants[participant_id == 2021009, swab_id := '01-19-299']
participants[swab_id == '01-19-307', participant_id := 1010302]
participants[swab_id == '01-19-306', participant_id := 1019205]
participants[swab_id == '01-19-292', participant_id := 6030101]
participants[swab_id == '01-19-327', participant_id := 3020901]
participants[swab_id == '01-19-295', household_id := 10116]
participants[swab_id == '01-19-316', household_id := 40206]
participants[swab_id == '01-19-288', participant_id := 3016306]
participants[swab_id == '01-19-288', participant_id := 3016306]
participants[household_id == 30331, c('participant_id', 'swab_id') := .(3033104, '01-19-318')]
participants[participant_id == 3033103, swab_id := '01-19-317']
participants[participant_id == 1016501, swab_id := '01-19-301']
participants[participant_id == 4027103, swab_id := '01-19-319']
participants = participants %>%
rbind(swab[household_id == 10116, c("participant_id", "date", "household_id", "swab_id", "secretions",
"contamination", "adverse_event", "comment")] %>%
.[, swab_age := contact_data[household_id == 10116, participant_age_years]] %>%
.[, swab_id := "01-19-295"],
use.names=T, fill=T) %>%
rbind(swab[participant_id == 4020602, c("participant_id", "date", "household_id", "swab_id", "secretions",
"contamination", "adverse_event", "comment")] %>%
.[, swab_age := contact_data[household_id == 40206, participant_age_years]] %>%
.[, swab_id := '01-19-316'],
use.names=T, fill=T) %>%
rbind(swab[participant_id == 3033103, c("participant_id", "date", "household_id", "swab_id", "secretions",
"contamination", "adverse_event", "comment")] %>%
.[, swab_age := contact_data[participant_id == 3033103, participant_age_years]] %>%
.[, swab_id := '01-19-317'],
use.names=T, fill=T)
#There are some duplicates in the participants list
#participants[swab_id %in% data[, swab_ID] & swab_id %in% participants[, .N, by="swab_id"][N>1, swab_id]]
participants = participants[!(participant_id == 3033104 & is.na(swab_age))]
#' These cannot be merged - ask Casey for participant_id on labels
data[!id %in% participants[, swab_id]]
data %>%
merge(participants, by.x="id", by.y="swab_id",
all.x=T, all.y=F)
data = data %>%
merge(participants, by.x="id", by.y="swab_id",
all.x=T, all.y=F)
data[is.na(swab_age), c("participant_id")] %>%
merge(contact_data[, c("participant_id", "participant_age_years")],
by.x="participant_id", by.y="participant_id")
data[is.na(swab_age), c("participant_id")]
#' These cannot be merged - ask Casey for participant_id on labels
data[!id %in% participants[, swab_id]]
#' These cannot be merged - ask Casey for participant_id on labels
data[id %in% participants[, swab_id]]
pacman::p_load(data.table, magrittr, ggplot2, readxl, binom, patchwork)
options(scipen=999)
data = readxl::read_excel("~/workspace/espicc_microbiology/data/ESPICC_n453_09-Jun-22_v2.0_withmissing.xls", na = c("", ".")) %>%
as.data.table
stata_data = haven::read_dta("~/workspace/espicc_microbiology/data/ESPICC_n453_09-Jun-22_v2.0.dta") %>% as.data.table()
serotypes_by_vaccine = data.table::fread("~/workspace/espicc_microbiology/data/serotypes_by_vaccine.csv")
#' Load other contact survey data
espicc_analysis_dir = "~/workspace/espicc_contact_survey"
source("~/workspace/espicc_contact_survey/scripts/load_data.R")
participants = data.table::fread("~/workspace/espicc_somaliland/swab_export_list.csv")
participants
swab
participants
swab[, c("participant_id", "date", "household_id", "swab_id", "secretions", "contamination", "adverse_event", "comment", "swab_age", "u15", "u5")]
swab[, c("participant_id", "date", "household_id", "swab_id", "secretions", "contamination", "adverse_event", "comment")]
swab[, c("participant_id", "date", "household_id", "swab_id", "secretions", "contamination", "adverse_event", "comment", "participant_age")]
swab$participant_age_dob
swab[, c("participant_id", "date", "household_id", "swab_id", "secretions", "contamination", "adverse_event", "comment", "participant_age_dob")]
swab[, c("participant_id", "date", "household_id", "swab_id", "secretions", "contamination", "adverse_event", "comment", "participant_age_dob", "participant_age_estimated", "participant_age_known", "participant_age_months", "participant_age_years")]
swab[, c("participant_id", "date", "household_id", "swab_id", "secretions", "contamination", "adverse_event", "comment", "participant_age_dob", "participant_age_estimated", "participant_age_known", "participant_age_month", "participant_age_years")]
participants[, date := as.Date(date)]
#' Manual matches of participant and swab
#' - part of data cleaning, need to create one clean dataset, potentially move this to csv file
participants[participant_id == 2021009, swab_id := '01-19-299']
participants[swab_id == '01-19-307', participant_id := 1010302]
participants[swab_id == '01-19-306', participant_id := 1019205]
participants[swab_id == '01-19-292', participant_id := 6030101]
participants[swab_id == '01-19-327', participant_id := 3020901]
participants[swab_id == '01-19-295', household_id := 10116]
participants[swab_id == '01-19-316', household_id := 40206]
participants[swab_id == '01-19-288', participant_id := 3016306]
participants[swab_id == '01-19-288', participant_id := 3016306]
participants[household_id == 30331, c('participant_id', 'swab_id') := .(3033104, '01-19-318')]
participants[participant_id == 3033103, swab_id := '01-19-317']
participants[participant_id == 1016501, swab_id := '01-19-301']
participants[participant_id == 4027103, swab_id := '01-19-319']
participants = participants %>%
rbind(swab[household_id == 10116, c("participant_id", "date", "household_id", "swab_id", "secretions",
"contamination", "adverse_event", "comment")] %>%
.[, swab_age := contact_data[household_id == 10116, participant_age_years]] %>%
.[, swab_id := "01-19-295"],
use.names=T, fill=T) %>%
rbind(swab[participant_id == 4020602, c("participant_id", "date", "household_id", "swab_id", "secretions",
"contamination", "adverse_event", "comment")] %>%
.[, swab_age := contact_data[household_id == 40206, participant_age_years]] %>%
.[, swab_id := '01-19-316'],
use.names=T, fill=T) %>%
rbind(swab[participant_id == 3033103, c("participant_id", "date", "household_id", "swab_id", "secretions",
"contamination", "adverse_event", "comment")] %>%
.[, swab_age := contact_data[participant_id == 3033103, participant_age_years]] %>%
.[, swab_id := '01-19-317'],
use.names=T, fill=T)
participants[swab_id %in% data[, swab_ID] & swab_id %in% participants[, .N, by="swab_id"][N>1, swab_id]]
participants[!(participant_id == 3033104 & is.na(swab_age))]
participants[, .N, by="swab_id"]
participants[, .N, by="swab_id"] %>% .[N>1]
participants[swab_id %in% participants[, .N, by="swab_id"] %>% .[N>1, swab_id]]
participants[swab_id %in% (participants[, .N, by="swab_id"] %>% .[N>1, swab_id])]
participants[swab_id %in% (participants[, .N, by="swab_id"] %>% .[N>1, swab_id]) & swab_id %in% data[, swab_id]]
data$id
participants[swab_id %in% (participants[, .N, by="swab_id"] %>% .[N>1, swab_id]) & swab_id %in% data[, id]]
participants[swab_id %in% (participants[, .N, by="swab_id"] %>% .[N>1, swab_id])]
participants[(participant_id == 3033104 & is.na(swab_age))]
participants = participants[!(participant_id == 3033104 & is.na(swab_age))]
#' There are some duplicates in the participants list
participants[swab_id %in% (participants[, .N, by="swab_id"] %>% .[N>1, swab_id]) & swab_id %in% data[, id]]
participants[swab_id %in% (participants[, .N, by="swab_id"] %>% .[N>1, swab_id]) & swab_id %in% data[, id]]
participants[swab_id %in% (participants[, .N, by="swab_id"] %>% .[N>1, swab_id]) & swab_id %in% data[, id], c("participant_id", "swab_id")] %>% setorder(swab_id) %>% .[]
participants[swab_id %in% (participants[, .N, by="swab_id"] %>% .[N>1, swab_id]) & swab_id %in% data[, id], c("participant_id", "swab_id")] %>% .[, length(unique(participant_id)), by="swab_id"]
participants[swab_id %in% (participants[, .N, by="swab_id"] %>% .[N>1, swab_id]) & swab_id %in% data[, id], c("participant_id", "swab_id")] %>% .[, length(unique(participant_id)), by="swab_id"] %>%
.[V1>1, swab_id]
#' These cannot be merged - ask Casey for participant_id on labels
data[!id %in% participants[, swab_id]]
#' These cannot be merged - ask Casey for participant_id on labels
data[!id %in% participants[, swab_id], id]
data = data %>%
merge(participants, by.x="id", by.y="swab_id",
all.x=T, all.y=F)
data
#' Some records don't have an age, get this age from the contact data
found_ids = data[is.na(swab_age), c("participant_id")] %>%
merge(contact_data[, c("participant_id", "participant_age_years")],
by.x="participant_id", by.y="participant_id")
for(i in 1:nrow(found_ids)){
data[participant_id == found_ids[i, participant_id], swab_age := found_ids[i, participant_age_years]]
}
#' These cannot be merged - ask Casey for participant_id on labels
data[!id %in% participants[, swab_id], id]
#' These duplicates have different participant IDs - ask Casey for participant_id on labels
participants[swab_id %in% (participants[, .N, by="swab_id"] %>% .[N>1, swab_id]) & swab_id %in% data[, id], c("participant_id", "swab_id")] %>% .[, length(unique(participant_id)), by="swab_id"] %>%
.[V1>1, swab_id]
#' Some more data to process
data[id == '01-19-302', c("participant_id") := .(6021001)]
data[participant_id == 6021001, swab_age := contact_data[participant_id == 6021001, participant_age_years]]
data[is.na(swab_age)]
#' Still a large number without swab age - even though we have participant id
#' - TODO: check date of collection
#' - Check with selected person in household_id
data[is.na(swab_age), .N]
#' Still a large number without swab age - even though we have participant id
#' - TODO: check date of collection
#' - Check with selected person in household_id
data[, .N]
#' Still a large number without swab age - even though we have participant id
#' - TODO: check date of collection
#' - Check with selected person in household_id
data[is.na(swab_age), .N]/data[, .N]
#' Get age group age
age_groups_sample <- data.table(
age_from = c(0, 2, 6, 15, 30, 50),
age_to = c(1, 5, 14, 29, 49, 100)
)[, name := paste0(age_from, "-", age_to)][age_to == 1, name := "<2"][age_to == 100, name := "50+"]
for(i in 1:nrow(age_groups_sample)){
data[swab_age >= age_groups_sample[i, age_from] & swab_age <= age_groups_sample[i, age_to], agegrp := factor(
age_groups_sample[i, name], levels=age_groups_sample[, name])]
}
results_total = binom::binom.confint(data[, pneu_carr_final] %>% sum(na.rm = TRUE), data[!is.na(pneu_carr_final), .N], methods = "exact") %>%
as.data.table %>% .[, -"method"] %>%
.[, c("mean", "lower", "upper") := .(round(mean*100, 1), round(lower*100, 1), round(upper*100, 1))]
colnames(results_total) = c("carriers", "total", "mean", "lower", "upper")
results_by_age = data[, .(carriers = sum(pneu_carr_final, na.rm=TRUE), total = sum(!is.na(pneu_carr_final))), by="agegrp"] %>%
.[, c("mean", "lower", "upper") := binom::binom.confint(carriers, total, methods = "exact") %>%
{.[, c("mean", "lower", "upper")] * 100} %>%
round(1), by="agegrp"] %>% setorder(agegrp)
results_total
results_by_age = data[, .(carriers = sum(pneu_carr_final, na.rm=TRUE), total = sum(!is.na(pneu_carr_final))), by="agegrp"] %>%
.[, c("mean", "lower", "upper") := binom::binom.confint(carriers, total, methods = "exact") %>%
{.[, c("mean", "lower", "upper")] * 100} %>%
round(1), by="agegrp"] %>% setorder(agegrp)
results_by_age
results_by_age
setwd("~/workspace/covid19-shielding-microsimulation-digaale")
#' Scenarios to model
scenario_list = readRDS("./data/clean/scenarios.RDS")
#' target R0s per simulation
target_R0 = c(1.5, 2.5, 3.5, 5)
#' Proportion of people aged >60 who are shielded
iv_shielded_prop = c(1, 0.8, 0.6, 0.4, 0.2, 0)
#' Size of each shielding compartment
iv_shielded_gz_size <- c(0, 2, 4, 8, 16)
#' Options to mitigate infections when individuals enter shielded compartment
iv_shielded_enter <- c(all = 1, nosymptomatic = 2, test = 3)
#' Ratio adjusting the contacts between shielded and unshielded contacts
iv_shielded_unshielded_contacts <- c(0, 0.2, 0.4, 0.6, 0.8, 1.0)
#' Ratio adjusting the contacts between shielded contacts
iv_shielded_shielded_contacts <- c(0.2, 0.4, 0.6, 0.8, 1.0, 1.2)
#' Ratio adjusting the contact rate of symptomatic individuals who are shielded
iv_shielded_symptomatic_contacts <- c(0, 0.2, 0.4, 0.6, 0.8, 1)
#' Mitigation option when an individual with symptoms is detected in a shielded space
iv_shielded_mitigate <- c(delay0 = 0, delay2 = 2, delay4 = 4, none= -1, allexit = 99)
#' Immunity in the population before starting the simulation
prior_immunity = c(0, 0.25, 0.5)
base_scenario = data.table(
iv_shielded_enter = 1,
iv_shielded_unshielded_contacts = 0.2,
iv_shielded_shielded_contacts = 1,
iv_shielded_symptomatic_contacts = 1,
iv_shielded_mitigate = -1)
variables = c("iv_shielded_enter", "iv_shielded_unshielded_contacts", "iv_shielded_shielded_contacts",
"iv_shielded_symptomatic_contacts", "iv_shielded_mitigate")
library(data.table)
#' target R0s per simulation
target_R0 = c(1.5, 2.5, 3.5, 5)
#' Proportion of people aged >60 who are shielded
iv_shielded_prop = c(1, 0.8, 0.6, 0.4, 0.2, 0)
#' Size of each shielding compartment
iv_shielded_gz_size <- c(0, 2, 4, 8, 16)
#' Options to mitigate infections when individuals enter shielded compartment
iv_shielded_enter <- c(all = 1, nosymptomatic = 2, test = 3)
#' Ratio adjusting the contacts between shielded and unshielded contacts
iv_shielded_unshielded_contacts <- c(0, 0.2, 0.4, 0.6, 0.8, 1.0)
#' Ratio adjusting the contacts between shielded contacts
iv_shielded_shielded_contacts <- c(0.2, 0.4, 0.6, 0.8, 1.0, 1.2)
#' Ratio adjusting the contact rate of symptomatic individuals who are shielded
iv_shielded_symptomatic_contacts <- c(0, 0.2, 0.4, 0.6, 0.8, 1)
#' Mitigation option when an individual with symptoms is detected in a shielded space
iv_shielded_mitigate <- c(delay0 = 0, delay2 = 2, delay4 = 4, none= -1, allexit = 99)
#' Immunity in the population before starting the simulation
prior_immunity = c(0, 0.25, 0.5)
base_scenario = data.table(
iv_shielded_enter = 1,
iv_shielded_unshielded_contacts = 0.2,
iv_shielded_shielded_contacts = 1,
iv_shielded_symptomatic_contacts = 1,
iv_shielded_mitigate = -1)
variables = c("iv_shielded_enter", "iv_shielded_unshielded_contacts", "iv_shielded_shielded_contacts",
"iv_shielded_symptomatic_contacts", "iv_shielded_mitigate")
scenario_list = variables %>% lapply(function(v){
get(v) %>%
subset(!. %in% base_scenario[, get(v)]) %>%
lapply(function(x){
base_scenario %>% copy %>% .[, {v} := x]}) %>%
rbindlist}) %>% rbindlist
library(magrittr)
scenario_list = variables %>% lapply(function(v){
get(v) %>%
subset(!. %in% base_scenario[, get(v)]) %>%
lapply(function(x){
base_scenario %>% copy %>% .[, {v} := x]}) %>%
rbindlist}) %>% rbindlist
scenario_list = rbind(base_scenario, scenario_list)
scenario_list[, sub_scen := 1:.N]
#' Duplicate for all shielded_prop, shielded_gz_size, target_r0, and prior_immunity considered
scenario_list = expand.grid(iv_shielded_prop = iv_shielded_prop,
iv_shielded_gz_size = iv_shielded_gz_size,
target_R0 = target_R0,
prior_immunity = prior_immunity) %>% as.data.table %>%
.[!(iv_shielded_prop == 0 & iv_shielded_gz_size > 0) & !(iv_shielded_gz_size == 0 & iv_shielded_prop > 0)] %>%
.[, main_scen := 1:.N] %>%
.[, cbind(.SD, scenario_list), by="main_scen"] %>%
.[!(iv_shielded_prop == 0 & sub_scen > 1)] %>%
.[, scen := 1:.N] %>%
.[, c("scen", "main_scen", "sub_scen", colnames(.) %>%
subset(!. %in% c("scen", "main_scen", "sub_scen"))), with=F]
scenario_list
scenario_list[iv_shielded_prop == 0]
scenario_list[iv_shielded_prop == 0 & prior_immunity == 0]
scenario_list[sub_scen == 1]
scenario_list[iv_shielded_prop == 0 & prior_immunity == 0]
prior_immunity_age_patterns
prior_immunity_age_patterns = readRDS("./prevalence_by_age.RDS")
prior_immunity_age_patterns = readRDS("./data/prevalence_by_age.RDS")
prior_immunity_age_patterns = readRDS("./data/raw/prevalence_by_age.RDS")
prior_immunity_age_patterns
prior_immunity_age_patterns[age == "80+"]
scenario_list
#population_data = tempfile()
#download.file("https://github.com/kevinvzandvoort/espicc-somaliland-digaale-survey-2019/raw/main/data/household_data_members.RDS",
#              population_data)
#population_data = population_data %>% readRDS %>% .[, c("id", "household_id", "age_group_80")]
#saveRDS(population_data, "./data/raw/population_data.RDS")
population_data = readRDS("./data/raw/population_data.RDS")
population_data
digaale_survey_population =
readRDS("./data/raw/digaale_survey_population.RDS")
digaale_survey_population
digaale_contact_data =
readRDS("./data/raw/digaale_contact_data.RDS")
digaale_contact_data
readRDS("./data/clean/modelled_populations.RDS")
x = readRDS("./data/clean/modelled_populations.RDS")
x
x[run == 1]
x[run == 2]
x[run == 3]
x[run == 3, N]
plot(x[run == 3, N])
plot(x[run == 4, N])
plot(x[run == 5, N])
plot(x[run == 50, N])
plot(x[run == 500, N])
17/71
17/70
16/70
5400000 * (16/70)
5400000 * (17/70)
5400000 * (17/71)
17/71
17/71 * 100
17/71 * 1000000
17/71 * 100000000
17/71 * 10000000000
17/71 * 10000000000000
